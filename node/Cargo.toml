[package]
authors = ['Metaverse Developers <https://metaverse.network>']
build = 'build.rs'
description = 'A decentralised world powered by economy.'
edition = '2021'
homepage = 'https://metaverse.network'
license = 'Unlicense'
name = 'metaverse-node'
repository = 'https://github.com/bit-country/Metaverse-Network/'
version = '0.0.38'

[package.metadata.docs.rs]
targets = ['x86_64-unknown-linux-gnu']


[[bin]]
name = "metaverse-node"

[dependencies]
codec = { package = 'parity-scale-codec', version = '3.1.5' }
serde = { workspace = true, features = ["derive"] }
futures = { workspace = true }
hex-literal = { workspace = true }
log = { workspace = true, default-features = true }
clap = { workspace = true }
parking_lot = { workspace = true }
async-trait = { workspace = true }
jsonrpsee = { workspace = true }
parity-util-mem = { workspace = true }
url = { workspace = true }
tracing-core = { workspace = true }
getrandom = { workspace = true }

sc-authority-discovery = { workspace = true }
sc-cli = { workspace = true }
sc-client-db = { workspace = true }
sc-chain-spec = { workspace = true }
sp-core = { workspace = true }
sc-executor = { workspace = true }
sc-service = { workspace = true }
sc-telemetry = { workspace = true }
sc-keystore = { workspace = true }
sp-inherents = { workspace = true }
sc-transaction-pool = { workspace = true }
sc-transaction-pool-api = { workspace = true }
sc-consensus = { workspace = true }
sc-consensus-aura = { workspace = true }
sc-consensus-babe = { workspace = true }
sp-consensus-aura = { workspace = true }
sp-consensus-babe = { workspace = true }
sc-consensus-babe-rpc = { workspace = true }
sc-consensus-epochs = { workspace = true }
sc-consensus-slots = { workspace = true }
sc-consensus-manual-seal = { workspace = true }
sp-consensus = { workspace = true }
sp-authority-discovery = { workspace = true, optional = true }
sp-finality-grandpa = { workspace = true }
sc-finality-grandpa = { workspace = true }
sc-finality-grandpa-rpc = { workspace = true }
sc-client-api = { workspace = true }
sc-network = { workspace = true }
sc-network-common = { workspace = true }
sc-tracing = { workspace = true }
sp-runtime = { workspace = true }
sp-timestamp = { workspace = true }
sc-sync-state-rpc = { workspace = true }
sp-transaction-pool = { workspace = true, default-features = true }
sp-transaction-storage-proof = { workspace = true }
sp-keystore = { workspace = true }
sp-keyring = { workspace = true }
sp-session = { workspace = true, default-features = true }
sp-offchain = { workspace = true, default-features = true }
#sp-authorship = { git = "https://github.com/paritytech/substrate", branch = "polkadot-v0.9.38" }
#sc-consensus-uncles = { git = "https://github.com/paritytech/substrate", branch = "polkadot-v0.9.38" }

# These dependencies are used for the node template's RPCs
jsonrpc-core = { workspace = true }
jsonrpc-pubsub = { workspace = true }
sc-rpc = { workspace = true }
sp-api = { workspace = true, default-features = true }
sc-rpc-api = { workspace = true }
sp-blockchain =  { workspace = true }
sp-block-builder =  { workspace = true, default-features = true }
sc-basic-authorship =  { workspace = true }
substrate-frame-rpc-system = { workspace = true }
pallet-transaction-payment-rpc = { workspace = true, default-features = true }
pallet-transaction-payment = { workspace = true, default-features = true }
pallet-im-online = { workspace = true, optional = true }
substrate-prometheus-endpoint =  { workspace = true }

# These dependencies are used for runtime benchmarking
frame-benchmarking = { workspace = true, default-features = true }
frame-benchmarking-cli = { workspace = true }
frame-system = { workspace = true, default-features = true }
node-primitives = { workspace = true, optional = true }

# Metaverse related dependencies
primitives = { package = "bit-country-primitives", path = "../primitives/metaverse" }
metaverse-runtime-common = { version = "0.0.1", path = "../runtime/common", optional = true }
metaverse-runtime = { version = "0.0.60", path = "../runtime/metaverse", optional = true }
pioneer-runtime = { version = "0.0.7", path = "../runtime/pioneer", optional = true }
continuum-runtime = { version = "0.0.7", path = "../runtime/continuum", optional = true }

# Cumulus dependencies
cumulus-client-consensus-aura = { workspace = true }
cumulus-client-consensus-common = { workspace = true }
cumulus-client-collator = { workspace = true }
cumulus-client-cli = { workspace = true }
cumulus-client-network = { workspace = true }
cumulus-client-service = { workspace = true }
cumulus-primitives-core = { workspace = true, default-features = true}
cumulus-primitives-parachain-inherent = { workspace = true }
cumulus-relay-chain-interface = { workspace = true }
cumulus-relay-chain-minimal-node = { workspace = true }
cumulus-relay-chain-rpc-interface = { workspace = true }
cumulus-relay-chain-inprocess-interface = { workspace = true }

# Polkadot dependencies
polkadot-cli = { workspace = true }
polkadot-parachain = { workspace = true, default-features = true }
polkadot-primitives = { workspace = true, default-features = true }
polkadot-service = { workspace = true }
xcm = { workspace = true }

# EVM dependencies
fp-rpc = { workspace = true, default-features = true, optional = true }
fp-consensus = { workspace = true, optional = true }
fp-storage = { workspace = true, optional = true }
fc-cli = { workspace = true, optional = true }
fc-rpc = { workspace = true, optional = true }
fc-rpc-core = { workspace = true, optional = true }
fc-consensus = { workspace = true, optional = true }
fc-mapping-sync = { workspace = true, optional = true }
fc-db = { workspace = true, optional = true }
pallet-dynamic-fee = { workspace = true, optional = true }
pallet-ethereum = { workspace = true, default-features = true, optional = true }


[build-dependencies]
substrate-build-script-utils = { workspace = true }


[features]
default = ["with-metaverse-runtime"]

with-metaverse-runtime = [
    "metaverse-runtime-common",
    "metaverse-runtime",
    "fc-consensus",
    "fc-cli",
    "fc-db",
    "fc-mapping-sync",
    "fc-rpc",
    "fc-rpc-core",
    "fp-consensus",
    "fp-rpc",
    "fp-storage",
    "pallet-dynamic-fee",
    "pallet-ethereum",
]

with-pioneer-runtime = [
    "pioneer-runtime",
]

with-continuum-runtime = [
    "continuum-runtime",
]

runtime-benchmarks = [
    "polkadot-service/runtime-benchmarks",
    "metaverse-runtime/runtime-benchmarks",
    "polkadot-cli/runtime-benchmarks",
]
