
//! Autogenerated weights for `nft`
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2021-11-02, STEPS: `20`, REPEAT: 10, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! EXECUTION: Some(Wasm), WASM-EXECUTION: Compiled, CHAIN: None, DB CACHE: 128

// Executed Command:
// ./target/release/metaverse-node
// benchmark
// --pallet=nft
// --extrinsic=*
// --steps=20
// --repeat=10
// --execution=wasm
// --wasm-execution=compiled
// --raw
// --output
// ./pallets/nft/src/weights.rs


#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]

use frame_support::{traits::Get, weights::Weight};
use sp_std::marker::PhantomData;

/// Weight functions for `nft`.
pub struct WeightInfo<T>(PhantomData<T>);
impl<T: frame_system::Config> nft::WeightInfo for WeightInfo<T> {
	// Storage: Nft NextGroupCollectionId (r:1 w:1)
	// Storage: Nft AllNftGroupCollection (r:1 w:1)
	// Storage: Nft GroupCollections (r:0 w:1)
	fn create_group() -> Weight {
		(39_000_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(2 as Weight))
			.saturating_add(T::DbWeight::get().writes(3 as Weight))
	}
	// Storage: OrmlNFT NextClassId (r:1 w:1)
	// Storage: Nft GroupCollections (r:1 w:0)
	// Storage: System Account (r:1 w:1)
	// Storage: OrmlNFT Classes (r:0 w:1)
	// Storage: Nft ClassDataCollection (r:0 w:1)
	fn create_class() -> Weight {
		(138_000_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(3 as Weight))
			.saturating_add(T::DbWeight::get().writes(4 as Weight))
	}
}
